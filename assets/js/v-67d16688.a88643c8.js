(self.webpackChunkformula_bot_docs=self.webpackChunkformula_bot_docs||[]).push([[325],{395:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>e});const e={key:"v-67d16688",path:"/plugins/",title:"Initial Installation",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Adding a plugin to the container",slug:"adding-a-plugin-to-the-container",children:[]}],filePathRelative:"plugins/index.md",git:{updatedTime:1674944275e3,contributors:[]}}},102:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>i});var e=s(252);const t=(0,e.Wm)("h1",{id:"initial-installation"},[(0,e.Wm)("a",{class:"header-anchor",href:"#initial-installation"},"#"),(0,e.Uk)(" Initial Installation")],-1),o=(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,"To enable a plugin you'll have to add it to your service volume collection. Read below on how to do that.")],-1),l={class:"table-of-contents"},p=(0,e.Uk)("Adding a plugin to the container"),u=(0,e.uE)('<h2 id="adding-a-plugin-to-the-container"><a class="header-anchor" href="#adding-a-plugin-to-the-container">#</a> Adding a plugin to the container</h2><p>To add a new plugin to an existing deployed container, follow the following steps. First, determine which plugin you would like to add. You will need the part after <code>Formula.Bot.Plugins.</code></p><blockquote><p><code>{PLUGIN_NAME}</code> -&gt; The part that comes right after <code>Formula.Bot.Plugins.</code> in the repository name.<br><code>{LOWERCASE_PLUGIN_NAME}</code> -&gt; Same as <code>PLUGIN_NAME</code>, but well.. in lowercase.</p></blockquote><ol><li>Add the following part to the <code>docker-compose.plugins.yml</code> file. If this file does not exist, please follow step 4 of the deployment instruction.</li></ol><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">formulabot</span><span class="token punctuation">:</span>\n    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> formulabot<span class="token punctuation">-</span>plugin<span class="token punctuation">-</span><span class="token punctuation">{</span>LOWERCASE_PLUGIN_NAME<span class="token punctuation">}</span><span class="token punctuation">:</span>/app/Plugins/Formula.Bot.Plugins.<span class="token punctuation">{</span>PLUGIN_NAME<span class="token punctuation">}</span>/\n<span class="token key atrule">volumes</span><span class="token punctuation">:</span>\n  formulabot<span class="token punctuation">-</span>plugin<span class="token punctuation">-</span><span class="token punctuation">{</span>LOWERCASE_PLUGIN_NAME<span class="token punctuation">}</span><span class="token punctuation">:</span>\n    <span class="token key atrule">external</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>For example, if you wanted to add the <code>Formula.Bot.Plugins.Metrics</code> plugin you&#39;d type:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">formulabot</span><span class="token punctuation">:</span>\n    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> formulabot<span class="token punctuation">-</span>plugin<span class="token punctuation">-</span>metrics<span class="token punctuation">:</span>/app/Plugins/Formula.Bot.Plugins.Metrics/\n<span class="token key atrule">volumes</span><span class="token punctuation">:</span>\n  <span class="token key atrule">formulabot-plugin-metrics</span><span class="token punctuation">:</span>\n    <span class="token key atrule">external</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="2"><li>Run the following command to create the volumes on your host system. Because these are not managed by Docker Compose (due to the <code>external: true</code> part), you&#39;ll have to create them yourself.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker volume create formulabot-plugins-<span class="token punctuation">{</span>LOWERCASE_PLUGIN_NAME<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>For example with the metrics plugin:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker volume create formulabot-plugins-metrics\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="3"><li>If your plugin requires configuration, make sure to write that now, by following the <code>Adding Plugin Configuration</code> instructions.</li><li>Because you modified the <code>docker-compose.*.yml</code> file, you&#39;ll have to restart your compose containers to apply your changes. After you executed that command, your plugin should be correctly enabled and working.</li></ol>',12),i={render:function(n,a){const s=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,o,(0,e.Wm)("nav",l,[(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)(s,{to:"#adding-a-plugin-to-the-container"},{default:(0,e.w5)((()=>[p])),_:1})])])]),u],64)}}}}]);